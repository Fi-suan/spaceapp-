from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
import asyncio
import logging

from app.core.config import settings
from app.api.space_objects import router as space_objects_router
from app.api.dashboard_sections import router as dashboard_router
from app.services.cache_manager import city_cache

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
CITIES = [
    # Kazakhstan
    {'id': 'almaty', 'name': '–ê–ª–º–∞—Ç—ã', 'latitude': 43.2220, 'longitude': 76.8512},
    {'id': 'astana', 'name': '–ê—Å—Ç–∞–Ω–∞', 'latitude': 51.1694, 'longitude': 71.4491},
    {'id': 'pavlodar', 'name': '–ü–∞–≤–ª–æ–¥–∞—Ä', 'latitude': 52.2873, 'longitude': 76.9665},
    {'id': 'ekibastuz', 'name': '–ï–∫–∏–±–∞—Å—Ç—É–∑', 'latitude': 51.7244, 'longitude': 75.3232},
    {'id': 'aktau', 'name': '–ê–∫—Ç–∞—É', 'latitude': 43.6506, 'longitude': 51.1603},
    # USA
    {'id': 'los-angeles', 'name': 'Los Angeles', 'latitude': 34.0522, 'longitude': -118.2437},
    {'id': 'miami', 'name': 'Miami', 'latitude': 25.7617, 'longitude': -80.1918},
    # Australia
    {'id': 'sydney', 'name': 'Sydney', 'latitude': -33.8688, 'longitude': 151.2093},
    {'id': 'perth', 'name': 'Perth', 'latitude': -31.9505, 'longitude': 115.8605},
    # Europe
    {'id': 'london', 'name': 'London', 'latitude': 51.5074, 'longitude': -0.1278},
    {'id': 'paris', 'name': 'Paris', 'latitude': 48.8566, 'longitude': 2.3522},
    {'id': 'barcelona', 'name': 'Barcelona', 'latitude': 41.3851, 'longitude': 2.1734},
    # Asia
    {'id': 'tokyo', 'name': 'Tokyo', 'latitude': 35.6762, 'longitude': 139.6503},
    {'id': 'singapore', 'name': 'Singapore', 'latitude': 1.3521, 'longitude': 103.8198},
    {'id': 'dubai', 'name': 'Dubai', 'latitude': 25.2048, 'longitude': 55.2708},
    # South America
    {'id': 'sao-paulo', 'name': 'S√£o Paulo', 'latitude': -23.5505, 'longitude': -46.6333},
    {'id': 'buenos-aires', 'name': 'Buenos Aires', 'latitude': -34.6037, 'longitude': -58.3816},
    # Africa
    {'id': 'cairo', 'name': 'Cairo', 'latitude': 30.0444, 'longitude': 31.2357},
    {'id': 'cape-town', 'name': 'Cape Town', 'latitude': -33.9249, 'longitude': 18.4241}
]

def create_app() -> FastAPI:
    app = FastAPI(
        title=settings.app_name,
        description=settings.app_description,
        version=settings.app_version,
        docs_url="/docs",  # Swagger UI
        redoc_url="/redoc"  # ReDoc
    )

    # CORS middleware
    app.add_middleware(
        CORSMiddleware,
        allow_origins=settings.allowed_origins,
        allow_credentials=settings.allow_credentials,
        allow_methods=settings.allowed_methods,
        allow_headers=settings.allowed_headers,
    )

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
    app.include_router(space_objects_router, prefix="/api/v1")
    app.include_router(dashboard_router, prefix="/api/v1")

    @app.on_event("startup")
    async def startup_event():
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        logger.info("üöÄ Starting SpaceApp API...")
        logger.info("üì¶ Initializing cache for cities...")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫—ç—à —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤
        await city_cache.initialize(CITIES)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 20 –º–∏–Ω—É—Ç
        asyncio.create_task(city_cache.start_background_refresh(CITIES))
        logger.info("‚úÖ Cache initialized and background refresh started")

    @app.on_event("shutdown")
    async def shutdown_event():
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏"""
        logger.info("üõë Shutting down SpaceApp API...")
        city_cache.stop_background_refresh()
        logger.info("‚úÖ Background tasks stopped")

    @app.get("/")
    async def root():
        """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API"""
        return {"message": "SpaceApp API —Ä–∞–±–æ—Ç–∞–µ—Ç!", "docs": "/docs"}

    @app.get("/health")
    async def health_check():
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API"""
        return {"status": "ok", "message": "API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"}

    @app.get("/cache/stats")
    async def cache_stats():
        """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞"""
        return city_cache.get_cache_stats()

    @app.get("/cities")
    async def get_cities():
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤"""
        return {
            "cities": CITIES,
            "total": len(CITIES)
        }

    return app

app = create_app()

if __name__ == "__main__":
    uvicorn.run(
        app,
        host=settings.host,
        port=settings.port
    )